/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package edu.davinci.lenguaje;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int STRING = 9;
  /** RegularExpression Id. */
  int INTEGER = 10;
  /** RegularExpression Id. */
  int TRUE = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int PROGRAM = 13;
  /** RegularExpression Id. */
  int SUBPROGRAM = 14;
  /** RegularExpression Id. */
  int PROCEDURE = 15;
  /** RegularExpression Id. */
  int FUNCTION = 16;
  /** RegularExpression Id. */
  int RETURN = 17;
  /** RegularExpression Id. */
  int INPUT = 18;
  /** RegularExpression Id. */
  int OUTPUT = 19;
  /** RegularExpression Id. */
  int INPUTOUTPUT = 20;
  /** RegularExpression Id. */
  int VAR = 21;
  /** RegularExpression Id. */
  int BEGIN = 22;
  /** RegularExpression Id. */
  int IF = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int REPEAT = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int START = 28;
  /** RegularExpression Id. */
  int MOVE = 29;
  /** RegularExpression Id. */
  int RIGHT = 30;
  /** RegularExpression Id. */
  int TAKEFLOWOR = 31;
  /** RegularExpression Id. */
  int TAKEPAPER = 32;
  /** RegularExpression Id. */
  int PUTFLOWER = 33;
  /** RegularExpression Id. */
  int PUTPAPER = 34;
  /** RegularExpression Id. */
  int POSAV = 35;
  /** RegularExpression Id. */
  int POSCA = 36;
  /** RegularExpression Id. */
  int HAYFLORENLAESQUINA = 37;
  /** RegularExpression Id. */
  int HAYFLORENLABOLSA = 38;
  /** RegularExpression Id. */
  int HAYPAPELENLAESQUINA = 39;
  /** RegularExpression Id. */
  int HAYPAPELENLABOLSA = 40;
  /** RegularExpression Id. */
  int HAYOBSTACULO = 41;
  /** RegularExpression Id. */
  int HAYROBOT = 42;
  /** RegularExpression Id. */
  int MESSAGE = 43;
  /** RegularExpression Id. */
  int READ = 44;
  /** RegularExpression Id. */
  int POSITION = 45;
  /** RegularExpression Id. */
  int THREADS = 46;
  /** RegularExpression Id. */
  int THREAD = 47;
  /** RegularExpression Id. */
  int THREAD_START = 48;
  /** RegularExpression Id. */
  int SEMAPHORE = 49;
  /** RegularExpression Id. */
  int SEMAPHORE_BINARY = 50;
  /** RegularExpression Id. */
  int SEMAPHORE_GENERAL = 51;
  /** RegularExpression Id. */
  int SEMAPHORE_INIT = 52;
  /** RegularExpression Id. */
  int SIGNAL = 53;
  /** RegularExpression Id. */
  int WAIT = 54;
  /** RegularExpression Id. */
  int RANDOM = 55;
  /** RegularExpression Id. */
  int LENGTH = 56;
  /** RegularExpression Id. */
  int SUBSTRING = 57;
  /** RegularExpression Id. */
  int NUMBERTOTEXT = 58;
  /** RegularExpression Id. */
  int TEXTTONUMBER = 59;
  /** RegularExpression Id. */
  int LOGICTOTEXT = 60;
  /** RegularExpression Id. */
  int LOWERCASE = 61;
  /** RegularExpression Id. */
  int UPPERCASE = 62;
  /** RegularExpression Id. */
  int TRIM = 63;
  /** RegularExpression Id. */
  int REPLACE = 64;
  /** RegularExpression Id. */
  int STARTSWITH = 65;
  /** RegularExpression Id. */
  int ENDSWITH = 66;
  /** RegularExpression Id. */
  int INDEXOF = 67;
  /** RegularExpression Id. */
  int SQRT = 68;
  /** RegularExpression Id. */
  int POW = 69;
  /** RegularExpression Id. */
  int MAX = 70;
  /** RegularExpression Id. */
  int SIN = 71;
  /** RegularExpression Id. */
  int COS = 72;
  /** RegularExpression Id. */
  int TAN = 73;
  /** RegularExpression Id. */
  int LOG = 74;
  /** RegularExpression Id. */
  int RANDOMLET = 75;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 76;
  /** RegularExpression Id. */
  int STRING_LITERAL = 77;
  /** RegularExpression Id. */
  int IDENTIFIER = 78;
  /** RegularExpression Id. */
  int LPAREN = 79;
  /** RegularExpression Id. */
  int RPAREN = 80;
  /** RegularExpression Id. */
  int LBRACE = 81;
  /** RegularExpression Id. */
  int RBRACE = 82;
  /** RegularExpression Id. */
  int SEMICOLON = 83;
  /** RegularExpression Id. */
  int COLON = 84;
  /** RegularExpression Id. */
  int COMMA = 85;
  /** RegularExpression Id. */
  int DOT = 86;
  /** RegularExpression Id. */
  int ASSIGN = 87;
  /** RegularExpression Id. */
  int EQ = 88;
  /** RegularExpression Id. */
  int LE = 89;
  /** RegularExpression Id. */
  int GT = 90;
  /** RegularExpression Id. */
  int LT = 91;
  /** RegularExpression Id. */
  int GE = 92;
  /** RegularExpression Id. */
  int NE = 93;
  /** RegularExpression Id. */
  int OR = 94;
  /** RegularExpression Id. */
  int AND = 95;
  /** RegularExpression Id. */
  int NOT = 96;
  /** RegularExpression Id. */
  int PLUS = 97;
  /** RegularExpression Id. */
  int MINUS = 98;
  /** RegularExpression Id. */
  int PROD = 99;
  /** RegularExpression Id. */
  int DIV = 100;
  /** RegularExpression Id. */
  int MOD = 101;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"logico\"",
    "\"texto\"",
    "\"numero\"",
    "\"v\"",
    "\"f\"",
    "\"programa\"",
    "\"subprogramas\"",
    "\"procedimiento\"",
    "\"funcion\"",
    "\"retornar\"",
    "\"en\"",
    "\"sa\"",
    "\"es\"",
    "\"variables\"",
    "\"comenzar\"",
    "\"si\"",
    "\"sino\"",
    "\"mientras\"",
    "\"repetir\"",
    "\"fin\"",
    "\"iniciar\"",
    "\"mover\"",
    "\"derecha\"",
    "\"tomarFlor\"",
    "\"tomarPapel\"",
    "\"depositarFlor\"",
    "\"depositarPapel\"",
    "\"PosAv\"",
    "\"PosCa\"",
    "\"HayFlorEnLaEsquina\"",
    "\"HayFlorEnLaBolsa\"",
    "\"HayPapelEnLaEsquina\"",
    "\"HayPapelEnLaBolsa\"",
    "\"HayObstaculo\"",
    "\"HayRobot\"",
    "\"Informar\"",
    "\"Pedir\"",
    "\"Pos\"",
    "\"hilos\"",
    "\"hilo\"",
    "\"arrancar\"",
    "\"_semaforo_\"",
    "\"semaforoBinario\"",
    "\"semaforoGeneral\"",
    "\"iniciarSemaforo\"",
    "\"Avisar\"",
    "\"Esperar\"",
    "\"Aleatorio\"",
    "\"Longitud\"",
    "\"Sustraer\"",
    "\"NumeroATexto\"",
    "\"TextoANumero\"",
    "\"LogicoATexto\"",
    "\"Minuscula\"",
    "\"Mayuscula\"",
    "\"Cortar\"",
    "\"Reemplazar\"",
    "\"Comienzacon\"",
    "\"Terminacon\"",
    "\"Indicede\"",
    "\"Raiz\"",
    "\"Potencia\"",
    "\"MayorValor\"",
    "\"Seno\"",
    "\"Coseno\"",
    "\"Tangente\"",
    "\"Logaritmo\"",
    "\"LetraAleatoria\"",
    "<INTEGER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\":=\"",
    "\"=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<>\"",
    "\"|\"",
    "\"&\"",
    "\"!\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
  };

}
