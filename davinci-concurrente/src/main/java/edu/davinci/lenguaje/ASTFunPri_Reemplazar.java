/* Generated By:JJTree: Do not edit this line. ASTFunPri_Reemplazar.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=CustomNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package edu.davinci.lenguaje;

import static edu.davinci.lenguaje.CustomNode.pila;
import edu.davinci.utils.Resource;
import java.text.MessageFormat;

public class ASTFunPri_Reemplazar extends SimpleNode {

    public ASTFunPri_Reemplazar(int id) {
        super(id);
    }

    public ASTFunPri_Reemplazar(Parser p, int id) {
        super(p, id);
    }

    @Override
    public void interpret() {
        Debug.println("<<Pri_Reemplazar>>");

        // Interpretamos la expresion de la funcion
        jjtGetChild(0).interpret();

        // guardamos el texto
        String value = ((DatoTexto) pila.pop()).getValor();

        // Interpretamos la expresion de la funcion
        jjtGetChild(1).interpret();

        // guardamos
        String t1 = ((DatoTexto) pila.pop()).getValor();

        // Interpretamos la expresion de la funcion
        jjtGetChild(2).interpret();

        // guardamos
        String t2 = ((DatoTexto) pila.pop()).getValor();

        // reemplazamos el texto
        try {
            value = value.replaceAll(t1, t2);
        } catch (StringIndexOutOfBoundsException s) {
            throw new RuntimeException(
                    MessageFormat.format(
                            Resource.getString("funcion.reemplazar"), value,
                            t1, t2));

        }

        // almacenamos el texto resultante
        pila.push(new DatoTexto(value));
    }

}
/* JavaCC - OriginalChecksum=9772f027d374d24a5044f0c060f30e58 (do not edit this line) */
