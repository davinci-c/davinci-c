programa ProductorConsumidor

variables
	lleno:semaforoGeneral
	vacio:semaforoGeneral
	turno:semaforoBinario
	turno_cuadrante:semaforoBinario
	avenida:numero
	calle:numero

subprogramas

	procedimiento tomarFlorDeCuadrante
	variables
		tengoFlor:logico
		av:numero
		ca:numero
	comenzar
		//marcamos que aun no obtuvimos una flor
		tengoFlor := f

		//ciclo que correra hasta obtener una flor
		mientras ! tengoFlor
			comenzar
				
				//obtenemos un numero aleatorio para la avenida
				av:= aleatorio(10)+1 
		
				//obtenemos un numero aleatorio para la calle
				ca:=aleatorio(10)+1

				//posicionamos el robot
				Pos(av,ca)
				
				//marcamos si en la posicion hay una flor
				tengoFlor := HayFlorEnLaEsquina
			fin

			//tomamos la flor
			tomarFlor
	fin

	procedimiento depositarFlorEnCuadrante
	variables
		av:numero
		ca:numero
	comenzar
		
		//obtenemos un numero aleatorio para la avenida
		av:= aleatorio(10)+1 
		
		//obtenemos un numero aleatorio para la calle
		ca:=aleatorio(10)+1

		//posicionamos el robot
		Pos(av,ca)

		//depositamos la flor
		depositarFlor
	fin

	procedimiento tomarFlorDeCalle(en av:numero; en ca:numero)
	comenzar
		
		//posicionamos al robot
		Pos(av,ca)

		//tomamos una flor
		tomarFlor

		//
		Informar("tome flor en la esquina ",av,",",ca)
	fin

	procedimiento depositarFlorEnCalle(en av:numero; en ca:numero)
	comenzar
		
		//posicionamos el robot
		Pos(av,ca)
		
		//depositamos una flor
		depositarFlor

		//
		Informar("deposite flor en la esquina ",av,",",ca)
	fin

hilos
	hilo productor1
	comenzar

		//introducimos el robot en la ciudad
		iniciar

		mientras v
			comenzar
			
			//esperamos el turno para obtener una flor del cuadrante
			esperar(turno_cuadrante)

			//tomamos la flor del cuadrante
			tomarFlorDeCuadrante
		
			//señalamos el fin del turno
			se\u00D1alar(turno_cuadrante)

			//sincronizamos con el resto de los productores, consumidores -  tambien evita superar los limites 
			esperar(vacio)
			
				//esperamos el turno para trabajar en la calle
				esperar(turno)
				avenida := avenida + 1
				depositarFlorEnCalle(avenida,calle)
				se\u00D1alar(turno)
			
			//senalamos que se ha depositado un elemento
			se\u00D1alar(lleno)
			fin
	fin

	hilo productor2
	comenzar

		//introducimos el robot en la ciudad
		iniciar

		mientras v
			comenzar
			
			//esperamos el turno para obtener una flor del cuadrante
			esperar(turno_cuadrante)

			//tomamos la flor del cuadrante
			tomarFlorDeCuadrante
		
			//señalamos el fin del turno
			se\u00D1alar(turno_cuadrante)

			//sincronizamos con el resto de los productores, consumidores -  tambien evita superar los limites 
			esperar(vacio)
			
				//esperamos el turno para trabajar en la calle
				esperar(turno)
				avenida := avenida + 1
				depositarFlorEnCalle(avenida,calle)
				se\u00D1alar(turno)
			
			//senalamos que se ha depositado un elemento
			se\u00D1alar(lleno)
			fin
	fin

	hilo consumidor
	comenzar
		//introducimos el robot en la ciudad
		iniciar

		mientras v
			comenzar

			//sincronizamos con el resto de los productores, consumidores -  tambien evita superar los limites
			esperar(lleno)
			
				esperar(turno)
				tomarFlorDeCalle(avenida,calle)
				avenida := avenida - 1
				se\u00D1alar(turno)

			//senala que se tomo una flor de la calle
			se\u00D1alar(vacio)

			//
			depositarFlorEnCuadrante
			fin
	fin

comenzar
	
	//controlamos que no se puedan tomar flores de la calle si no se han depositado
	iniciarSemaforo(lleno,0)

	//controlamos que no se puedan depositar mas flores que el limite 
	iniciarSemaforo(vacio,10)

	//controlamos el acceso al recurso 
	iniciarSemaforo(turno,1)

	//controlamos el acceso para obtener la flor del cuadrante
	iniciarSemaforo(turno_cuadrante,1)

	//
	avenida := 0
	
	//calle que actuara como buffer
	calle := 2
	
	//arrancamos los productores y consumidores
	arrancar productor1
	arrancar productor2
	arrancar consumidor
fin